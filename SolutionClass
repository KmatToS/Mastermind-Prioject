using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Mastermind
{
    class solutionClass
    {

        Random rng = new Random();
        string[] colorArray = new string[6] {"Red", "Blue", "Yellow", "Green", "Purple", "Orange"};
        string[] solutionCode = new string[4];
        public solutionClass()
        {
            for (int i = 0; i < 4; i++)
            {
                solutionCode[i] = randomColor();
            }
        }
        public Boolean Check(string[] guess, out int correctColor, out int correctPosition)
        {
            correctColor = 0;
            correctPosition = 0;

            for (int i = 0; i < 4; i++)
            {
                if (solutionCode[i].Equals(guess[i]))
                {
                    correctPosition++;
                }
            }

            if (correctPosition == 4)
            {
                return true; //only returns true when the game is solved. Otherwise, it should return false but still update the two counter variables
            }


            string[] colorCheck = (string[])solutionCode.Clone();

            for (int j = 0; j < 4; j++)
            {
                for (int k = 0; k < 4; k++)
                {
                    if (guess[j].Equals(colorCheck[k]))
                    {
                        correctColor++;
                        colorCheck[k] = "";
                        break;
                    }
                }
            }
            return false;
        }

        private string randomColor()
        {//returns a random color string from one of the six listed in colorArray
            int colorNum = rng.Next(1, 6);
            string randColor = colorArray[(colorNum - 1)];
            return randColor;
        }

        private void makeSolution()
        {//method that makes a random code for the solution
            for (int i = 0; i < 4; i++)
            {
                solutionCode[i] = randomColor();
            }
        }
    }
}
